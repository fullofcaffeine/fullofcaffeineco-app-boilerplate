package client.data;

import client.externs.Mobx;
import coconut.data.Model;


class TodoItemModel implements Model {
  @:editable var completed:Bool = @byDefault false;
  @:editable var description:String;
  @:constant var created:Date = @byDefault Date.now();

  static public function isActive(item: TodoItemModel)
    return !item.completed;

  static public function isCompleted(item: TodoItemModel)
    return item.completed;

  static public function create(description:String) 
    return new TodoItemModel({description: description}); // Constructor is autogenerated
}

@:expose
class TodoItemStore {
  public var item: TodoItemModel;
  public var completed: Bool;
  public var description: String;
  public var created: Date;

  static function __init__() {
    Mobx.decorate(TodoItemStore, {
      completed: Mobx.observable,
      description: Mobx.observable
    });
  }


  public function new(item: TodoItemModel) { 
    this.item = item; 
    this.description = item.description;
    this.created = item.created;
    this.completed = item.completed;

    this.item.observables.completed.bind({}, (val) -> { this.completed = val; });
    this.item.observables.description.bind({}, (val) -> { this.description = val; });
  }

  public static function create(description: String) {
    var item = TodoItemModel.create(description);
    var store = new TodoItemStore(item);
    return store;
  }

  public static function wrap(item: TodoItemModel) {
    var store = new TodoItemStore(item);
    return store;
  }

  public function setCompleted(val: Bool) { this.item.completed = val; };
  public function setDescription(val: String) { this.item.description = val; };
}
