// Generated by Haxe 4.0.0-rc.3+e3df7a4
(function ($hx_exports, $global) { "use strict";
$hx_exports["client"] = $hx_exports["client"] || {};
$hx_exports["client"]["data"] = $hx_exports["client"]["data"] || {};
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class HxOverrides {
	static remove(a,obj) {
		var i = a.indexOf(obj);
		if(i == -1) {
			return false;
		}
		a.splice(i,1);
		return true;
	}
	static iter(a) {
		return { cur : 0, arr : a, hasNext : function() {
			return this.cur < this.arr.length;
		}, next : function() {
			return this.arr[this.cur++];
		}};
	}
}
HxOverrides.__name__ = true;
Math.__name__ = true;
class Reflect {
	static fields(o) {
		var a = [];
		if(o != null) {
			var hasOwnProperty = Object.prototype.hasOwnProperty;
			for( var f in o ) {
			if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
				a.push(f);
			}
			}
		}
		return a;
	}
}
Reflect.__name__ = true;
class client_data_TodoFilterModel {
	constructor() {
		this._updatePerformed = new tink_core_SignalTrigger();
		this.updatePerformed = this._updatePerformed;
		this.options = tink_pure__$List_List_$Impl_$.fromArray([new tink_core_NamedWith("All",function(_) {
			return true;
		}),new tink_core_NamedWith("Active",client_data_TodoItemModel.isActive),new tink_core_NamedWith("Completed",client_data_TodoItemModel.isCompleted)]);
		var this1 = new tink_state__$State_SimpleState(new tink_pure_NodeIterator(this.options).next().value,null,null);
		this.__coco_currentFilter = this1;
		var this2 = new tink_state__$State_SimpleState(0,null,null);
		this.__coco_transitionCount = this2;
		this.errorTrigger = tink_core__$Signal_Signal_$Impl_$.trigger();
		this.transitionErrors = this.errorTrigger;
		this.observables = { options : tink_state__$Observable_Observable_$Impl_$.const(this.options), currentFilter : this.__coco_currentFilter, isInTransition : tink_state__$Observable_Observable_$Impl_$.map(this.__coco_transitionCount,tink_state__$Observable_Transform_$Impl_$.plain(function(count) {
			return count > 0;
		}))};
	}
	toggle(filter) {
		var _gthis = this;
		return tink_core__$Promise_Promise_$Impl_$.next(this.__cocoupdate((function() {
			var _g = new tink_pure_NodeIterator(_gthis.options);
			while(_g.list.length > 0) {
				var o = _g.next();
				if(o.value == filter) {
					return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success({ currentFilter : filter})));
				}
			}
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success({ })));
		})()),function(_) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
		});
	}
	isActive(filter) {
		return filter == tink_state__$State_State_$Impl_$.get_value(this.__coco_currentFilter);
	}
	__cocoupdate(ret) {
		var sync = true;
		var done = false;
		var _gthis = this;
		ret.handle(function(o) {
			done = true;
			if(!sync) {
				_gthis.__coco_transitionCount.set(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_transitionCount) - 1);
			}
			switch(o._hx_index) {
			case 0:
				var delta = o.data;
				var delta1 = delta;
				var existent = tink_Anon.getExistentFields(delta1);
				if(Object.prototype.hasOwnProperty.call(existent,"currentFilter")) {
					_gthis.__coco_currentFilter.set(delta1.currentFilter);
				}
				tink_core__$Callback_CallbackList_$Impl_$.invoke(_gthis._updatePerformed.handlers,delta1);
				break;
			case 1:
				var e = o.failure;
				tink_core__$Callback_CallbackList_$Impl_$.invoke(_gthis.errorTrigger.handlers,e);
				break;
			}
		});
		if(!done) {
			sync = false;
		}
		if(!sync) {
			this.__coco_transitionCount.set(tink_state__$State_State_$Impl_$.get_value(this.__coco_transitionCount) + 1);
		}
		return ret;
	}
}
client_data_TodoFilterModel.__name__ = true;
Object.assign(client_data_TodoFilterModel.prototype, {
	__class__: client_data_TodoFilterModel
});
var client_externs_Mobx = require("mobx");
class client_data_TodoFilterStore {
	constructor() {
		this.filter = new client_data_TodoFilterModel();
		var _gthis = this;
		tink_state__$Observable_Observable_$Impl_$.bind(this.filter.observables.currentFilter,{ },function(f) {
			return _gthis.currentFilter = f;
		});
	}
	mapOptions(cb) {
		return tink_pure__$List_List_$Impl_$.toArray(tink_pure__$List_List_$Impl_$.map(this.filter.options,cb));
	}
	toggle(filter) {
		return this.filter.toggle(filter);
	}
	isActive(filter) {
		return this.filter.isActive(filter);
	}
	matches(store) {
		return this.currentFilter(store.item);
	}
}
$hx_exports["client"]["data"]["TodoFilterStore"] = client_data_TodoFilterStore;
client_data_TodoFilterStore.__name__ = true;
Object.assign(client_data_TodoFilterStore.prototype, {
	__class__: client_data_TodoFilterStore
});
class client_data_TodoItemModel {
	constructor(init) {
		this._updatePerformed = new tink_core_SignalTrigger();
		this.updatePerformed = this._updatePerformed;
		var value;
		var _g = init.completed;
		if(_g == null) {
			value = false;
		} else {
			var v = _g;
			value = v;
		}
		var this1 = new tink_state__$State_SimpleState(value,null,null);
		this.__coco_completed = this1;
		var this2 = new tink_state__$State_SimpleState(init.description,null,null);
		this.__coco_description = this2;
		var _g1 = init.created;
		var tmp;
		if(_g1 == null) {
			tmp = new Date();
		} else {
			var v1 = _g1;
			tmp = v1;
		}
		this.created = tmp;
		var this3 = new tink_state__$State_SimpleState(0,null,null);
		this.__coco_transitionCount = this3;
		this.errorTrigger = tink_core__$Signal_Signal_$Impl_$.trigger();
		this.transitionErrors = this.errorTrigger;
		this.observables = { completed : this.__coco_completed, description : this.__coco_description, created : tink_state__$Observable_Observable_$Impl_$.const(this.created), isInTransition : tink_state__$Observable_Observable_$Impl_$.map(this.__coco_transitionCount,tink_state__$Observable_Transform_$Impl_$.plain(function(count) {
			return count > 0;
		}))};
	}
	static isActive(item) {
		return !tink_state__$State_State_$Impl_$.get_value(item.__coco_completed);
	}
	static isCompleted(item) {
		return tink_state__$State_State_$Impl_$.get_value(item.__coco_completed);
	}
	static create(description) {
		return new client_data_TodoItemModel({ description : description});
	}
}
client_data_TodoItemModel.__name__ = true;
Object.assign(client_data_TodoItemModel.prototype, {
	__class__: client_data_TodoItemModel
});
class client_data_TodoItemStore {
	constructor(item) {
		this.item = item;
		this.description = tink_state__$State_State_$Impl_$.get_value(item.__coco_description);
		this.created = item.created;
		this.completed = tink_state__$State_State_$Impl_$.get_value(item.__coco_completed);
	}
	setCompleted(val) {
		this.completed = val;
	}
	setDescription(val) {
		this.description = val;
	}
	isActive() {
		return client_data_TodoItemModel.isActive(this.item);
	}
	isCompleted() {
		return client_data_TodoItemModel.isCompleted(this.item);
	}
	static create(description) {
		var item = client_data_TodoItemModel.create(description);
		var store = new client_data_TodoItemStore(item);
		return store;
	}
	static wrap(item) {
		var store = new client_data_TodoItemStore(item);
		return store;
	}
}
$hx_exports["client"]["data"]["TodoItemStore"] = client_data_TodoItemStore;
client_data_TodoItemStore.__name__ = true;
Object.assign(client_data_TodoItemStore.prototype, {
	__class__: client_data_TodoItemStore
});
class client_data_TodoListModel {
	constructor(init) {
		this._updatePerformed = new tink_core_SignalTrigger();
		this.updatePerformed = this._updatePerformed;
		var _gthis = this;
		if(init == null) {
			init = { };
		}
		var value;
		var _g = init.items;
		if(_g == null) {
			value = null;
		} else {
			var v = _g;
			value = v;
		}
		var this1 = new tink_state__$State_SimpleState(value,null,null);
		this.__coco_items = this1;
		var this2 = { f : function() {
			var predicate = client_data_TodoItemModel.isActive;
			var ret = 0;
			var _g1 = new tink_pure_NodeIterator(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_items));
			while(_g1.list.length > 0) {
				var x = _g1.next();
				if(predicate(x)) {
					++ret;
				}
			}
			return ret;
		}};
		this.__coco_unfinished = tink_state__$Observable_Observable_$Impl_$.auto(this2);
		var this3 = { f : function() {
			var this4 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.__coco_unfinished);
			var this5 = tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_items);
			return this4 < (this5 == null ? 0 : this5.length);
		}};
		this.__coco_hasAnyCompleted = tink_state__$Observable_Observable_$Impl_$.auto(this3);
		var this6 = new tink_state__$State_SimpleState(0,null,null);
		this.__coco_transitionCount = this6;
		this.errorTrigger = tink_core__$Signal_Signal_$Impl_$.trigger();
		this.transitionErrors = this.errorTrigger;
		this.observables = { items : this.__coco_items, unfinished : this.__coco_unfinished, hasAnyCompleted : this.__coco_hasAnyCompleted, isInTransition : tink_state__$Observable_Observable_$Impl_$.map(this.__coco_transitionCount,tink_state__$Observable_Transform_$Impl_$.plain(function(count) {
			return count > 0;
		}))};
	}
	add(description) {
		return tink_core__$Promise_Promise_$Impl_$.next(this.__cocoupdate(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success({ items : tink_pure__$List_List_$Impl_$.prepend(tink_state__$State_State_$Impl_$.get_value(this.__coco_items),client_data_TodoItemModel.create(description))})))),function(_) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
		});
	}
	delete(item) {
		return tink_core__$Promise_Promise_$Impl_$.next(this.__cocoupdate(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success({ items : tink_pure__$List_List_$Impl_$.filter(tink_state__$State_State_$Impl_$.get_value(this.__coco_items),function(i) {
			if(i != item) {
				return 1;
			} else {
				return 0;
			}
		})})))),function(_) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
		});
	}
	clearCompleted() {
		return tink_core__$Promise_Promise_$Impl_$.next(this.__cocoupdate(new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success({ items : tink_pure__$List_List_$Impl_$.filter(tink_state__$State_State_$Impl_$.get_value(this.__coco_items),function(i) {
			if(!tink_state__$State_State_$Impl_$.get_value(i.__coco_completed)) {
				return 1;
			} else {
				return 0;
			}
		})})))),function(_) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
		});
	}
	get_items() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_items);
	}
	get_unfinished() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__coco_unfinished);
	}
	get_hasAnyCompleted() {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this.__coco_hasAnyCompleted);
	}
	__cocoupdate(ret) {
		var sync = true;
		var done = false;
		var _gthis = this;
		ret.handle(function(o) {
			done = true;
			if(!sync) {
				_gthis.__coco_transitionCount.set(tink_state__$State_State_$Impl_$.get_value(_gthis.__coco_transitionCount) - 1);
			}
			switch(o._hx_index) {
			case 0:
				var delta = o.data;
				var delta1 = delta;
				var existent = tink_Anon.getExistentFields(delta1);
				if(Object.prototype.hasOwnProperty.call(existent,"items")) {
					_gthis.__coco_items.set(delta1.items);
				}
				tink_core__$Callback_CallbackList_$Impl_$.invoke(_gthis._updatePerformed.handlers,delta1);
				break;
			case 1:
				var e = o.failure;
				tink_core__$Callback_CallbackList_$Impl_$.invoke(_gthis.errorTrigger.handlers,e);
				break;
			}
		});
		if(!done) {
			sync = false;
		}
		if(!sync) {
			this.__coco_transitionCount.set(tink_state__$State_State_$Impl_$.get_value(this.__coco_transitionCount) + 1);
		}
		return ret;
	}
	get_isInTransition() {
		return tink_state__$State_State_$Impl_$.get_value(this.__coco_transitionCount) > 0;
	}
	get_updatePerformed() {
		return this.updatePerformed;
	}
}
$hx_exports["client"]["data"]["TodoListModel"] = client_data_TodoListModel;
client_data_TodoListModel.__name__ = true;
Object.assign(client_data_TodoListModel.prototype, {
	__class__: client_data_TodoListModel
});
class client_data_TodoListStore {
	constructor() {
		this.hasAnyCompleted = false;
		this.unfinished = 0;
		this.length = 0;
		this.items = [];
		this.todoList = new client_data_TodoListModel();
		this.setupObservables();
	}
	setupObservables() {
		var _gthis = this;
		this.items = tink_pure__$List_List_$Impl_$.toArray(tink_pure__$List_List_$Impl_$.map(tink_state__$State_State_$Impl_$.get_value(this.todoList.__coco_items),function(item) {
			return client_data_TodoItemStore.wrap(item);
		}));
		tink_state__$Observable_Observable_$Impl_$.bind(this.todoList.observables.items,{ },function(items) {
			var tmp = tink_pure__$List_List_$Impl_$.map(items,function(item1) {
				return client_data_TodoItemStore.wrap(item1);
			});
			_gthis.items = tink_pure__$List_List_$Impl_$.toArray(tmp);
			_gthis.length = _gthis.items.length;
			var tmp1 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.todoList.__coco_unfinished);
			_gthis.unfinished = tmp1;
			var tmp2 = tink_state__$Observable_Observable_$Impl_$.get_value(_gthis.todoList.__coco_hasAnyCompleted);
			return _gthis.hasAnyCompleted = tmp2;
		});
	}
	get_items() {
		return this.items;
	}
	add(description) {
		this.todoList.add(description);
	}
	delete(store) {
		this.todoList.delete(store.item);
	}
	clearCompleted() {
		this.todoList.clearCompleted();
	}
}
$hx_exports["client"]["data"]["TodoListStore"] = client_data_TodoListStore;
client_data_TodoListStore.__name__ = true;
Object.assign(client_data_TodoListStore.prototype, {
	__class__: client_data_TodoListStore
});
class haxe_ds_List {
	constructor() {
		this.length = 0;
	}
	push(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	first() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	pop() {
		if(this.h == null) {
			return null;
		}
		var x = this.h.item;
		this.h = this.h.next;
		if(this.h == null) {
			this.q = null;
		}
		this.length--;
		return x;
	}
}
haxe_ds_List.__name__ = true;
Object.assign(haxe_ds_List.prototype, {
	__class__: haxe_ds_List
});
class haxe_ds__$List_ListNode {
	constructor(item,next) {
		this.item = item;
		this.next = next;
	}
}
haxe_ds__$List_ListNode.__name__ = true;
Object.assign(haxe_ds__$List_ListNode.prototype, {
	__class__: haxe_ds__$List_ListNode
});
class haxe_ds_ObjectMap {
	constructor() {
		this.h = { __keys__ : { }};
	}
	set(key,value) {
		var id = key.__id__ || (key.__id__ = $global.$haxeUID++);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
}
haxe_ds_ObjectMap.__name__ = true;
Object.assign(haxe_ds_ObjectMap.prototype, {
	__class__: haxe_ds_ObjectMap
});
var haxe_ds_Option = $hxEnums["haxe.ds.Option"] = { __ename__ : true, __constructs__ : ["Some","None"]
	,Some: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ds.Option",toString:$estr}; },$_.__params__ = ["v"],$_)
	,None: {_hx_index:1,__enum__:"haxe.ds.Option",toString:$estr}
};
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
Object.assign(js__$Boot_HaxeError.prototype, {
	__class__: js__$Boot_HaxeError
});
class js_Boot {
	static getClass(o) {
		if(((o) instanceof Array) && o.__enum__ == null) {
			return Array;
		} else {
			var cl = o.__class__;
			if(cl != null) {
				return cl;
			}
			var name = js_Boot.__nativeClassName(o);
			if(name != null) {
				return js_Boot.__resolveNativeClass(name);
			}
			return null;
		}
	}
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				var e = $hxEnums[o.__enum__];
				var n = e.__constructs__[o._hx_index];
				var con = e[n];
				if(con.__params__) {
					s += "\t";
					var tmp = n + "(";
					var _g = [];
					var _g1 = 0;
					var _g2 = con.__params__;
					while(_g1 < _g2.length) {
						var p = _g2[_g1];
						++_g1;
						_g.push(js_Boot.__string_rec(o[p],s));
					}
					return tmp + _g.join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
	static __interfLoop(cc,cl) {
		if(cc == null) {
			return false;
		}
		if(cc == cl) {
			return true;
		}
		if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
			var intf = cc.__interfaces__;
			var _g = 0;
			var _g1 = intf.length;
			while(_g < _g1) {
				var i = _g++;
				var i1 = intf[i];
				if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
					return true;
				}
			}
		}
		return js_Boot.__interfLoop(cc.__super__,cl);
	}
	static __nativeClassName(o) {
		var name = js_Boot.__toStr.call(o).slice(8,-1);
		if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
			return null;
		}
		return name;
	}
	static __resolveNativeClass(name) {
		return $global[name];
	}
}
js_Boot.__name__ = true;
class tink_Anon {
	static getExistentFields(o) {
		var ret = { };
		var _g = 0;
		var _g1 = Reflect.fields(o);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			ret[f] = true;
		}
		return ret;
	}
}
tink_Anon.__name__ = true;
class tink_core__$Callback_Callback_$Impl_$ {
	static invoke(this1,data) {
		if(tink_core__$Callback_Callback_$Impl_$.depth < 500) {
			tink_core__$Callback_Callback_$Impl_$.depth++;
			this1(data);
			tink_core__$Callback_Callback_$Impl_$.depth--;
		} else {
			var _e = this1;
			var f = function(data1) {
				tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
			};
			var data2 = data;
			tink_core__$Callback_Callback_$Impl_$.defer(function() {
				f(data2);
			});
		}
	}
	static fromNiladic(f) {
		return f;
	}
	static defer(f) {
		process.nextTick(f);
	}
}
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
class tink_core__$Callback_SimpleLink {
	constructor(f) {
		this.f = f;
	}
	cancel() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
}
tink_core__$Callback_SimpleLink.__name__ = true;
Object.assign(tink_core__$Callback_SimpleLink.prototype, {
	__class__: tink_core__$Callback_SimpleLink
});
class tink_core__$Callback_ListCell {
	constructor(cb,list) {
		if(cb == null) {
			throw new js__$Boot_HaxeError("callback expected but null received");
		}
		this.cb = cb;
		this.list = list;
	}
	clear() {
		this.list = null;
		this.cb = null;
	}
	cancel() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
}
tink_core__$Callback_ListCell.__name__ = true;
Object.assign(tink_core__$Callback_ListCell.prototype, {
	__class__: tink_core__$Callback_ListCell
});
class tink_core__$Callback_CallbackList_$Impl_$ {
	static add(this1,cb) {
		var node = new tink_core__$Callback_ListCell(cb,this1);
		this1.push(node);
		return node;
	}
	static invoke(this1,data) {
		var _g = 0;
		var _g1 = this1.slice();
		while(_g < _g1.length) {
			var cell = _g1[_g];
			++_g;
			if(cell.cb != null) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
			}
		}
	}
	static clear(this1) {
		var _g = 0;
		var _g1 = this1.splice(0,this1.length);
		while(_g < _g1.length) {
			var cell = _g1[_g];
			++_g;
			cell.clear();
		}
	}
}
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
class tink_core_TypedError {
}
tink_core_TypedError.__name__ = true;
var tink_core_Noise = $hxEnums["tink.core.Noise"] = { __ename__ : true, __constructs__ : ["Noise"]
	,Noise: {_hx_index:0,__enum__:"tink.core.Noise",toString:$estr}
};
class tink_core__$Lazy_LazyConst {
	constructor(value) {
		this.value = value;
	}
	get() {
		return this.value;
	}
	map(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			return f(_gthis.value);
		});
	}
}
tink_core__$Lazy_LazyConst.__name__ = true;
Object.assign(tink_core__$Lazy_LazyConst.prototype, {
	__class__: tink_core__$Lazy_LazyConst
});
class tink_core__$Future_SyncFuture {
	constructor(value) {
		this.value = value;
	}
	flatMap(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	handle(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	gather() {
		return this;
	}
}
tink_core__$Future_SyncFuture.__name__ = true;
Object.assign(tink_core__$Future_SyncFuture.prototype, {
	__class__: tink_core__$Future_SyncFuture
});
class tink_core__$Future_Future_$Impl_$ {
	static flatten(f) {
		return new tink_core__$Future_NestedFuture(f);
	}
}
tink_core__$Future_Future_$Impl_$.__name__ = true;
class tink_core__$Future_SimpleFuture {
	constructor(f) {
		this.f = f;
	}
	handle(callback) {
		return this.f(callback);
	}
	flatMap(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	gather() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
}
tink_core__$Future_SimpleFuture.__name__ = true;
Object.assign(tink_core__$Future_SimpleFuture.prototype, {
	__class__: tink_core__$Future_SimpleFuture
});
class tink_core__$Future_NestedFuture {
	constructor(outer) {
		this.outer = outer;
	}
	flatMap(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	gather() {
		if(this.gathered != null) {
			return this.gathered;
		} else {
			return this.gathered = tink_core_FutureTrigger.gatherFuture(this);
		}
	}
	handle(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
}
tink_core__$Future_NestedFuture.__name__ = true;
Object.assign(tink_core__$Future_NestedFuture.prototype, {
	__class__: tink_core__$Future_NestedFuture
});
class tink_core_FutureTrigger {
	constructor() {
		var this1 = [];
		this.list = this1;
	}
	handle(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	flatMap(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	gather() {
		return this;
	}
	trigger(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	static gatherFuture(f) {
		var op = null;
		var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
			if(op == null) {
				op = new tink_core_FutureTrigger();
				f.handle($bind(op,op.trigger));
				f = null;
			}
			return op.handle(cb);
		});
		return this1;
	}
}
tink_core_FutureTrigger.__name__ = true;
Object.assign(tink_core_FutureTrigger.prototype, {
	__class__: tink_core_FutureTrigger
});
class tink_core__$Lazy_LazyFunc {
	constructor(f) {
		this.f = f;
	}
	get() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	map(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
}
tink_core__$Lazy_LazyFunc.__name__ = true;
Object.assign(tink_core__$Lazy_LazyFunc.prototype, {
	__class__: tink_core__$Lazy_LazyFunc
});
class tink_core_NamedWith {
	constructor(name,value) {
		this.name = name;
		this.value = value;
	}
}
tink_core_NamedWith.__name__ = true;
Object.assign(tink_core_NamedWith.prototype, {
	__class__: tink_core_NamedWith
});
var tink_core_Outcome = $hxEnums["tink.core.Outcome"] = { __ename__ : true, __constructs__ : ["Success","Failure"]
	,Success: ($_=function(data) { return {_hx_index:0,data:data,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["data"],$_)
	,Failure: ($_=function(failure) { return {_hx_index:1,failure:failure,__enum__:"tink.core.Outcome",toString:$estr}; },$_.__params__ = ["failure"],$_)
};
class tink_core_MPair {
	constructor(a,b) {
		this.a = a;
		this.b = b;
	}
}
tink_core_MPair.__name__ = true;
Object.assign(tink_core_MPair.prototype, {
	__class__: tink_core_MPair
});
class tink_core__$Promise_Promise_$Impl_$ {
	static next(this1,f,gather) {
		if(gather == null) {
			gather = true;
		}
		var ret = this1.flatMap(function(o) {
			switch(o._hx_index) {
			case 0:
				var d = o.data;
				return f(d);
			case 1:
				var f1 = o.failure;
				return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
			}
		});
		if(gather) {
			return ret.gather();
		} else {
			return ret;
		}
	}
}
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
class tink_core__$Signal_Signal_$Impl_$ {
	static trigger() {
		return new tink_core_SignalTrigger();
	}
}
tink_core__$Signal_Signal_$Impl_$.__name__ = true;
class tink_core_SignalTrigger {
	constructor() {
		this.handlers = [];
	}
}
tink_core_SignalTrigger.__name__ = true;
Object.assign(tink_core_SignalTrigger.prototype, {
	__class__: tink_core_SignalTrigger
});
class tink_pure__$List_List_$Impl_$ {
	static prepend(this1,value) {
		if(this1 == null) {
			return new tink_pure__$List_Node(1,value);
		} else {
			return new tink_pure__$List_Node(this1.length + 1,value,[this1]);
		}
	}
	static filter(this1,f) {
		if(this1 == null) {
			return null;
		} else {
			return this1.filter(f);
		}
	}
	static map(this1,f) {
		var _g = [];
		var _g1 = new tink_pure_NodeIterator(this1);
		while(_g1.list.length > 0) {
			var i = _g1.next();
			_g.push(f(i));
		}
		return tink_pure__$List_List_$Impl_$.fromArray(_g);
	}
	static toArray(this1) {
		var _g = [];
		var _g1 = new tink_pure_NodeIterator(this1);
		while(_g1.list.length > 0) {
			var v = _g1.next();
			_g.push(v);
		}
		return _g;
	}
	static fromArray(i) {
		var ret = null;
		var len = 0;
		var pos = i.length;
		while(pos-- > 0) ret = new tink_pure__$List_Node(++len,i[pos],ret == null ? tink_pure__$List_Node.EMPTY : [ret]);
		return ret;
	}
}
tink_pure__$List_List_$Impl_$.__name__ = true;
class tink_pure__$List_Node {
	constructor(length,value,tails) {
		this.value = value;
		this.length = length;
		this.tails = tails == null ? tink_pure__$List_Node.EMPTY : tails;
	}
	filter(f) {
		var iter = new tink_pure_NodeIterator(this);
		var ret = [];
		while(iter.list.length > 0) {
			var value = iter.next();
			var res = f(value);
			if(res > 0) {
				ret.push(value);
			}
			if((res & 3) == 3) {
				break;
			}
		}
		return tink_pure__$List_List_$Impl_$.fromArray(ret);
	}
}
tink_pure__$List_Node.__name__ = true;
Object.assign(tink_pure__$List_Node.prototype, {
	__class__: tink_pure__$List_Node
});
class tink_pure_NodeIterator {
	constructor(node) {
		this.list = [];
		if(node != null) {
			this.list.push(node);
		}
	}
	hasNext() {
		return this.list.length > 0;
	}
	next() {
		var _g = this.list.pop();
		if(_g == null) {
			return null;
		} else {
			var next = _g;
			var _g1 = -next.tails.length;
			var _g11 = 0;
			while(_g1 < _g11) {
				var i = _g1++;
				this.list.push(next.tails[-i - 1]);
			}
			return next.value;
		}
	}
}
tink_pure_NodeIterator.__name__ = true;
Object.assign(tink_pure_NodeIterator.prototype, {
	__class__: tink_pure_NodeIterator
});
class tink_state__$Observable_Observable_$Impl_$ {
	static get_value(this1) {
		return tink_state__$Observable_Observable_$Impl_$.measure(this1).a;
	}
	static map(this1,f) {
		return tink_state__$Observable_Observable_$Impl_$.create(function() {
			var m = tink_state__$Observable_Observable_$Impl_$.measure(this1);
			var this2 = new tink_core_MPair(f(m.a),m.b);
			var this3 = this2;
			return this3;
		});
	}
	static measure(this1) {
		var before = tink_state__$Observable_Observable_$Impl_$.stack.first();
		tink_state__$Observable_Observable_$Impl_$.stack.push(this1);
		var p = this1.poll();
		var c = tink_state__$Observable_AutoObservable;
		var _g;
		if(!((before) instanceof c)) {
			var o = before;
			_g = o != null && c.__isInterface__ && js_Boot.__interfLoop(js_Boot.getClass(o),c);
		} else {
			_g = true;
		}
		var _g1 = _g ? before : null;
		if(_g1 != null) {
			var v = _g1;
			v.subscribe(p.b);
		}
		tink_state__$Observable_Observable_$Impl_$.stack.pop();
		return p;
	}
	static bind(this1,options,cb) {
		var cb1;
		if(options == null) {
			cb1 = cb;
		} else {
			var _g1 = options.direct;
			var _g = options.comparator;
			if(_g == null) {
				cb1 = cb;
			} else {
				var equal = _g;
				var isFirst = true;
				var last = null;
				cb1 = function(data) {
					if(isFirst) {
						isFirst = false;
						tink_core__$Callback_Callback_$Impl_$.invoke(cb,data);
					} else if(!equal(last,data)) {
						tink_core__$Callback_Callback_$Impl_$.invoke(cb,data);
					}
					last = data;
				};
			}
		}
		if(options == null) {
			var scheduled = false;
			var active = true;
			var updated = null;
			var link = null;
			var update = function() {
				if(active) {
					var next = tink_state__$Observable_Observable_$Impl_$.measure(this1);
					tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next.a);
					scheduled = false;
					link = next.b.handle(updated);
				}
			};
			var doSchedule = function() {
				if(scheduled) {
					return;
				}
				scheduled = true;
				tink_state__$Observable_Observable_$Impl_$.schedule(update);
			};
			updated = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule);
			doSchedule();
			var this2 = new tink_core__$Callback_SimpleLink(function() {
				if(active) {
					active = false;
					if(link != null) {
						link.cancel();
					}
				}
			});
			return this2;
		} else {
			var _g3 = options.direct;
			var _g2 = options.comparator;
			if(_g3 == null) {
				var scheduled1 = false;
				var active1 = true;
				var updated1 = null;
				var link1 = null;
				var update1 = function() {
					if(active1) {
						var next1 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
						tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next1.a);
						scheduled1 = false;
						link1 = next1.b.handle(updated1);
					}
				};
				var doSchedule1 = function() {
					if(scheduled1) {
						return;
					}
					scheduled1 = true;
					tink_state__$Observable_Observable_$Impl_$.schedule(update1);
				};
				updated1 = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule1);
				doSchedule1();
				var this3 = new tink_core__$Callback_SimpleLink(function() {
					if(active1) {
						active1 = false;
						if(link1 != null) {
							link1.cancel();
						}
					}
				});
				return this3;
			} else if(_g3 == false) {
				var scheduled2 = false;
				var active2 = true;
				var updated2 = null;
				var link2 = null;
				var update2 = function() {
					if(active2) {
						var next2 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
						tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next2.a);
						scheduled2 = false;
						link2 = next2.b.handle(updated2);
					}
				};
				var doSchedule2 = function() {
					if(scheduled2) {
						return;
					}
					scheduled2 = true;
					tink_state__$Observable_Observable_$Impl_$.schedule(update2);
				};
				updated2 = tink_core__$Callback_Callback_$Impl_$.fromNiladic(doSchedule2);
				doSchedule2();
				var this4 = new tink_core__$Callback_SimpleLink(function() {
					if(active2) {
						active2 = false;
						if(link2 != null) {
							link2.cancel();
						}
					}
				});
				return this4;
			} else {
				var link3 = null;
				var update3 = null;
				update3 = function(_) {
					var next3 = tink_state__$Observable_Observable_$Impl_$.measure(this1);
					tink_core__$Callback_Callback_$Impl_$.invoke(cb1,next3.a);
					link3 = next3.b.handle(update3);
				};
				update3(tink_core_Noise.Noise);
				var this5 = new tink_core__$Callback_SimpleLink(function() {
					if(link3 != null) {
						link3.cancel();
					}
				});
				return this5;
			}
		}
	}
	static schedule(f) {
		var _g = tink_state__$Observable_Observable_$Impl_$.scheduled;
		if(_g == null) {
			f();
		} else {
			var v = _g;
			v.push(f);
			tink_state__$Observable_Observable_$Impl_$.scheduleUpdate();
		}
	}
	static scheduleUpdate() {
		if(!tink_state__$Observable_Observable_$Impl_$.isScheduled) {
			tink_state__$Observable_Observable_$Impl_$.isScheduled = true;
			if(tink_state__$Observable_Observable_$Impl_$.hasRAF) {
				window.requestAnimationFrame(function(_) {
					tink_state__$Observable_Observable_$Impl_$.scheduledRun();
				});
			} else {
				tink_core__$Callback_Callback_$Impl_$.defer(tink_state__$Observable_Observable_$Impl_$.scheduledRun);
			}
		}
	}
	static scheduledRun() {
		tink_state__$Observable_Observable_$Impl_$.isScheduled = false;
		tink_state__$Observable_Observable_$Impl_$.updatePending();
	}
	static updatePending(maxSeconds) {
		if(maxSeconds == null) {
			maxSeconds = .01;
		}
		var end = Date.now() / 1000 + maxSeconds;
		while(true) {
			var old = tink_state__$Observable_Observable_$Impl_$.scheduled;
			tink_state__$Observable_Observable_$Impl_$.scheduled = [];
			var _g = 0;
			while(_g < old.length) {
				var o = old[_g];
				++_g;
				o();
			}
			if(!(tink_state__$Observable_Observable_$Impl_$.scheduled.length > 0 && Date.now() / 1000 < end)) {
				break;
			}
		}
		if(tink_state__$Observable_Observable_$Impl_$.scheduled.length > 0) {
			tink_state__$Observable_Observable_$Impl_$.scheduleUpdate();
			return true;
		} else {
			return false;
		}
	}
	static create(f) {
		return new tink_state__$Observable_SimpleObservable(f);
	}
	static auto(f) {
		return new tink_state__$Observable_AutoObservable(f);
	}
	static const(value) {
		return new tink_state_ConstObservable(value);
	}
}
tink_state__$Observable_Observable_$Impl_$.__name__ = true;
class tink_state__$Observable_SimpleObservable {
	constructor(f) {
		if(tink_state__$Observable_SimpleObservable._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(f);
	}
	_hx_constructor(f) {
		this._poll = f;
	}
	resetCache(_) {
		this.cache = null;
	}
	poll() {
		var count = 0;
		var last = null;
		while(this.cache == null) {
			var cache = this.cache = this._poll();
			if(last == cache) {
				throw new js__$Boot_HaxeError("Polling loops on the same value");
			}
			last = cache;
			cache.b.handle($bind(this,this.resetCache));
			if(count++ >= 100) {
				throw new js__$Boot_HaxeError("Polling not concluded after 100 iterations");
			}
		}
		return this.cache;
	}
}
tink_state__$Observable_SimpleObservable.__name__ = true;
Object.assign(tink_state__$Observable_SimpleObservable.prototype, {
	__class__: tink_state__$Observable_SimpleObservable
});
class tink_state__$Observable_Transform_$Impl_$ {
	static plain(f) {
		var this1 = f;
		return this1;
	}
}
tink_state__$Observable_Transform_$Impl_$.__name__ = true;
class tink_state_ConstObservable {
	constructor(value) {
		var this1 = new tink_core_MPair(value,tink_state_ConstObservable.NEVER);
		var this2 = this1;
		this.m = this2;
	}
	poll() {
		return this.m;
	}
}
tink_state_ConstObservable.__name__ = true;
Object.assign(tink_state_ConstObservable.prototype, {
	__class__: tink_state_ConstObservable
});
class tink_state__$Observable_AutoObservable extends tink_state__$Observable_SimpleObservable {
	constructor(comp) {
		tink_state__$Observable_SimpleObservable._hx_skip_constructor = true;
		super();
		tink_state__$Observable_SimpleObservable._hx_skip_constructor = false;
		this._hx_constructor(comp);
	}
	_hx_constructor(comp) {
		this.subscriptions = new haxe_ds_ObjectMap();
		var _gthis = this;
		super._hx_constructor(function() {
			_gthis.subscriptions = new haxe_ds_ObjectMap();
			_gthis.trigger = new tink_core_FutureTrigger();
			var this1 = new tink_core_MPair(comp.f(),_gthis.trigger);
			var this2 = this1;
			return this2;
		});
	}
	subscribe(change) {
		if(this.subscriptions.h.__keys__[change.__id__] == null) {
			var this1 = this.subscriptions;
			var v = change.handle(($_=this.trigger,$bind($_,$_.trigger)));
			this1.set(change,v);
		}
	}
}
tink_state__$Observable_AutoObservable.__name__ = true;
Object.assign(tink_state__$Observable_AutoObservable.prototype, {
	__class__: tink_state__$Observable_AutoObservable
});
class tink_state__$State_State_$Impl_$ {
	static get_value(this1) {
		return tink_state__$Observable_Observable_$Impl_$.get_value(this1);
	}
}
tink_state__$State_State_$Impl_$.__name__ = true;
class tink_state__$State_SimpleState {
	constructor(value,isEqual,guard) {
		this.value = value;
		this.isEqual = isEqual;
		this.guard = guard;
		this.arm();
	}
	poll() {
		return this.next;
	}
	arm() {
		this.trigger = new tink_core_FutureTrigger();
		var this1 = new tink_core_MPair(this.value,this.trigger);
		var this2 = this1;
		this.next = this2;
	}
	set(value) {
		if(this.guard != null) {
			value = this.guard(value,this.value);
		}
		var b = this.value;
		if(this.isEqual == null ? value != b : !this.isEqual(value,b)) {
			this.value = value;
			var last = this.trigger;
			this.arm();
			last.trigger(tink_core_Noise.Noise);
		}
	}
}
tink_state__$State_SimpleState.__name__ = true;
Object.assign(tink_state__$State_SimpleState.prototype, {
	__class__: tink_state__$State_SimpleState
});
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
client_externs_Mobx.decorate(client_data_TodoFilterStore,{ currentFilter : client_externs_Mobx.observable});
client_externs_Mobx.decorate(client_data_TodoListStore,{ items : client_externs_Mobx.observable, unfinished : client_externs_Mobx.observable, hasAnyCompleted : client_externs_Mobx.observable, length : client_externs_Mobx.observable});
haxe_ds_ObjectMap.count = 0;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_pure__$List_Node.EMPTY = [];
tink_state__$Observable_Observable_$Impl_$.stack = new haxe_ds_List();
tink_state__$Observable_Observable_$Impl_$.scheduled = [];
tink_state__$Observable_Observable_$Impl_$.hasRAF = typeof window != 'undefined' && 'requestAnimationFrame' in window;
tink_state__$Observable_Observable_$Impl_$.isScheduled = false;
tink_state__$Observable_SimpleObservable._hx_skip_constructor = false;
tink_state_ConstObservable.NEVER = (function($this) {
	var $r;
	var this1 = new tink_core__$Future_SimpleFuture(function(_) {
		return null;
	});
	$r = this1;
	return $r;
}(this));
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
